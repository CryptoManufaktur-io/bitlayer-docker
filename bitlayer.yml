x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  geth:
    restart: "unless-stopped"
    build:
      context: ./geth
      dockerfile: ${DOCKERFILE}
      args:
        - BUILD_TARGET=${SRC_BUILD_TARGET:-'$(git describe --tags $(git rev-list --tags --max-count=1))'}
        - SRC_REPO=${SRC_REPO:-https://github.com/bitlayer-org/bitlayer-l2.git}
    stop_grace_period: 5m
    image: geth:bitlayer
    pull_policy: never
    user: geth
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - EXTRAS=${EXTRAS:-}
    volumes:
      - bitlayer-data:/var/lib/geth
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${P2P_PORT:-30303}:${P2P_PORT:-30303}/tcp
      - ${P2P_PORT:-30303}:${P2P_PORT:-30303}/udp
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - geth
      - --datadir
      - /var/lib/geth
      - --http
      - --http.addr
      - 0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --port
      - ${P2P_PORT:-30303}
      - --http.port
      - ${RPC_PORT:-8545}
      - --ws
      - --ws.addr
      - 0.0.0.0
      - --ws.port
      - ${WS_PORT:-8546}
      - --ws.origins=*
      - --metrics
      - --pprof
      - --pprof.addr
      - 0.0.0.0
      - --authrpc.vhosts=*
      - --maxpeers
      - "50"
      - --history.transactions
      - "0"
    labels:
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-bitlayer}.service=${RPC_HOST:-bitlayer}
      - traefik.http.routers.${RPC_HOST:-bitlayer}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-bitlayer}.rule=Host(`${RPC_HOST:-bitlayer}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-bitlayer}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST:-bitlayer}lb.service=${RPC_HOST:-bitlayer}
      - traefik.http.routers.${RPC_HOST:-bitlayer}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-bitlayer}lb.rule=Host(`${RPC_LB:-bitlayer-lb}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-bitlayer}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-bitlayer}.loadbalancer.server.port=${RPC_PORT:-8545}
      - traefik.http.routers.${WS_HOST:-bitlayerws}.service=${WS_HOST:-bitlayerws}
      - traefik.http.routers.${WS_HOST:-bitlayerws}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-bitlayerws}.rule=Host(`${WS_HOST:-bitlayerws}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-bitlayerws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST:-bitlayerws}lb.service=${WS_HOST:-bitlayerws}
      - traefik.http.routers.${WS_HOST:-bitlayerws}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-bitlayerws}lb.rule=Host(`${WS_LB:-bitlayerws-lb}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-bitlayerws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST:-bitlayerws}.loadbalancer.server.port=${WS_PORT:-8546}
      - metrics.scrape=true
      - metrics.path=/debug/metrics/prometheus
      - metrics.port=6060
      - metrics.instance=geth
      - metrics.network=bitlayer

volumes:
  bitlayer-data:
